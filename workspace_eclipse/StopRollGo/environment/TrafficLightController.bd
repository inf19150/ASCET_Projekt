classType environment.TrafficLightController
blockdiagramSpecification Main {
	methodBody calc {
		outPin {
			connection_32, connection_30, connection_28, connection_38, connection_36, connection_34, connection_44, connection_42, connection_40, connection_139, connection_141, connection_143, connection_137, connection_72, connection_68, connection_82, connection_65
		}
	}
	methodBody init {
		outPin active {
			connection_2, connection_4, connection_6
		}
	}
	complexIdentifier TrafficLight_instance_1 at (521, 51) size (14, 13) {
		comment at (30, -169) {
			"First TrafficLight instance, initialized at 300m"
		}
		label at (30, -149)
		methodCall environment.TrafficLight.setPosition {
			argumentPin pos at (left, 0) connection_3
			sequenceCall at (-40, -34) {
				inPin connection_2
			}
		}
		methodCall environment.TrafficLight.setRed {
			argumentPin r at (left, 2) connection_33 {
				bendpoints (250, 0), (250, 40)
			}
			sequenceCall at (10, -4) {
				inPin connection_32
			}
		}
		methodCall environment.TrafficLight.setYellow {
			argumentPin y at (left, 5) connection_39 {
				bendpoints (170, 0), (170, 20)
			}
			sequenceCall at (-60, -24) {
				inPin connection_38
			}
		}
		methodCall environment.TrafficLight.setGreen {
			argumentPin g at (left, 8) connection_45
			sequenceCall at (-70, -24) {
				inPin connection_44
			}
		}
		methodCall environment.TrafficLight.getProximity {
			returnPin at (right, 0) {
				connection_75, connection_64
			}
			sequenceCall {
				inPin
			}
		}
		methodCall environment.TrafficLight.updateProximity {
			argumentPin carElapsed at (bottom, 5) connection_140 {
				bendpoints (20, 0)
			}
			sequenceCall at (6, 11) {
				inPin connection_139
			}
		}
		methodCall environment.TrafficLight.getVisible {
			returnPin at (right, 7) {
				connection_73
			}
			sequenceCall at (0, 0) {
				inPin
			}
		}
	}
	complexIdentifier TrafficLight_instance_2 at (511, 401) size (14, 13) {
		comment at (20, -179) {
			"Second TrafficLight instance, initialized at 500m"
		}
		label at (30, -159)
		methodCall environment.TrafficLight.setPosition {
			argumentPin pos at (left, 0) connection_5
			sequenceCall at (-50, -34) {
				inPin connection_4
			}
		}
		methodCall environment.TrafficLight.setRed {
			argumentPin r at (left, 2) connection_31 {
				bendpoints (250, 0), (250, 390)
			}
			sequenceCall at (20, -4) {
				inPin connection_30
			}
		}
		methodCall environment.TrafficLight.setYellow {
			argumentPin y at (left, 5) connection_37 {
				bendpoints (170, 0), (170, 370)
			}
			sequenceCall at (-70, -24) {
				inPin connection_36
			}
		}
		methodCall environment.TrafficLight.setGreen {
			argumentPin g at (left, 8) connection_43 {
				bendpoints (90, 0), (90, 350)
			}
			sequenceCall at (-70, -24) {
				inPin connection_42
			}
		}
		methodCall environment.TrafficLight.getProximity {
			returnPin at (right, 0) {
				connection_81, connection_63
			}
			sequenceCall {
				inPin
			}
		}
		methodCall environment.TrafficLight.updateProximity {
			argumentPin carElapsed at (bottom, 4) connection_142 {
				bendpoints (20, 0)
			}
			sequenceCall at (6, 11) {
				inPin connection_141
			}
		}
		methodCall environment.TrafficLight.getVisible {
			returnPin at (right, 7) {
				connection_69
			}
			sequenceCall at (0, 0) {
				inPin
			}
		}
	}
	complexIdentifier TrafficLight_instance_3 at (511, 681) size (14, 13) {
		comment at (30, -179) {
			"Third TrafficLight instance, initialized at 900m"
		}
		label at (30, -159)
		methodCall environment.TrafficLight.setPosition {
			argumentPin pos at (left, 0) connection_7
			sequenceCall at (-40, -44) {
				inPin connection_6
			}
		}
		methodCall environment.TrafficLight.setRed {
			argumentPin r at (left, 2) connection_29 {
				bendpoints (250, 0), (250, 670)
			}
			sequenceCall at (20, -4) {
				inPin connection_28
			}
		}
		methodCall environment.TrafficLight.setYellow {
			argumentPin y at (left, 5) connection_35 {
				bendpoints (170, 0), (170, 650)
			}
			sequenceCall at (-70, -24) {
				inPin connection_34
			}
		}
		methodCall environment.TrafficLight.setGreen {
			argumentPin g at (left, 8) connection_41 {
				bendpoints (90, 0), (90, 630)
			}
			sequenceCall at (-70, -24) {
				inPin connection_40
			}
		}
		methodCall environment.TrafficLight.getProximity {
			returnPin at (right, 0) {
				connection_85, connection_62
			}
			sequenceCall {
				inPin
			}
		}
		methodCall environment.TrafficLight.updateProximity {
			argumentPin carElapsed at (bottom, 4) connection_144 {
				bendpoints (20, 0)
			}
			sequenceCall at (16, 11) {
				inPin connection_143
			}
		}
		methodCall environment.TrafficLight.getVisible {
			returnPin at (right, 7) {
				connection_83
			}
			sequenceCall at (0, 0) {
				inPin
			}
		}
	}
	literal unit resources.m "300.0" at (371, 53) size (49, 0) {
		outPin {
			connection_3
		}
	}
	literal unit resources.m "900.0" at (361, 683) size (49, 0) {
		outPin {
			connection_7
		}
	}
	literal unit resources.m "500.0" at (371, 403) size (49, 0) {
		outPin {
			connection_5
		}
	}
	simpleIdentifier resources.TrafficLightMessages.red at (11, 35) {
		label at (0, -1)
		outPin {
			connection_31, connection_33, connection_67, connection_29
		}
		sequenceCall {
			inPin
		}
	}
	simpleIdentifier resources.TrafficLightMessages.yellow at (61, 85) {
		label at (0, -1)
		outPin {
			connection_37, connection_39, connection_35
		}
		sequenceCall {
			inPin
		}
	}
	simpleIdentifier resources.TrafficLightMessages.green at (111, 135) {
		label at (0, -1)
		outPin {
			connection_43, connection_45, connection_41
		}
		sequenceCall {
			inPin
		}
	}
	complexIdentifier environment.FlashLight at (1061, 51) size (17, 76) {
		comment at (0, 21) {
			"Gets all proximities and the red LED state, returns if the car was flashed"
		}
		label at (0, 1)
		methodCall environment.FlashLight.calc {
			argumentPin proximity1 at (left, 0) connection_64
			argumentPin proximity2 at (left, 35) connection_63
			argumentPin proximity3 at (left, 63) connection_62
			argumentPin isRed at (top, 8) connection_67 {
				bendpoints (250, 0), (250, -30), (1100, -30)
			}
			returnPin at (right, 31) {
				connection_66
			}
			sequenceCall {
				inPin
			}
		}
	}
	simpleIdentifier resources.TrafficLightMessages.flashed at (1281, 365) {
		label at (0, -1)
		inPin connection_66
		sequenceCall {
			inPin connection_65
		}
	}
	if at (731, 471) {
		comment at (-60, 0) size (180, 41) {
			"If the TrafficLight instance is visible, set visibleProximity to its proximity"
		}
		inPin connection_69
		ifControlFlowOutPin {
			connection_80
		}
		sequenceCall {
			inPin connection_68
		}
	}
	simpleIdentifier resources.TrafficLightMessages.visibleProximity at (821, 455) {
		comment at (-40, 75) {
			""
		}
		label at (40, -21)
		inPin connection_81 {
			bendpoints (140, 0), (140, 50)
		}
		sequenceCall at (-10, 16) {
			inPin connection_80
		}
	}
	simpleIdentifier resources.TrafficLightMessages.visibleProximity at (811, 105) {
		label at (40, -21)
		inPin connection_75 {
			bendpoints (120, 0), (120, 50)
		}
		sequenceCall at (-10, 16) {
			inPin connection_74
		}
	}
	if at (711, 121) {
		comment at (-40, 0) size (190, 31) {
			"If the TrafficLight instance is visible, set visibleProximity to its proximity"
		}
		inPin connection_73
		ifControlFlowOutPin {
			connection_74
		}
		sequenceCall {
			inPin connection_72
		}
	}
	simpleIdentifier resources.TrafficLightMessages.visibleProximity at (821, 735) {
		label at (40, -21)
		inPin connection_85 {
			bendpoints (140, 0), (140, 50)
		}
		sequenceCall at (-10, 16) {
			inPin connection_84
		}
	}
	if at (731, 751) {
		comment at (-30, 0) size (190, 31) {
			"If the TrafficLight instance is visible, set visibleProximity to its proximity"
		}
		inPin connection_83
		ifControlFlowOutPin {
			connection_84
		}
		sequenceCall {
			inPin connection_82
		}
	}
	simpleIdentifier resources.TrafficLightMessages.visibleProximity at (91, 225) {
		comment at (-50, 25) {
			"Reset visibleProximity to 0m\r\n"
		}
		label at (0, -1)
		inPin connection_138
		sequenceCall {
			inPin connection_137
		}
	}
	literal unit resources.m "0.0" at (21, 223) size (49, 0) {
		outPin {
			connection_138
		}
	}
	simpleIdentifier resources.CarMessages.dist at (521, 205) {
		label at (0, -1)
		outPin {
			connection_140
		}
		sequenceCall {
			inPin
		}
	}
	simpleIdentifier resources.CarMessages.dist at (501, 555) {
		label at (0, -1)
		outPin {
			connection_142
		}
		sequenceCall {
			inPin
		}
	}
	simpleIdentifier resources.CarMessages.dist at (501, 835) {
		label at (0, -1)
		outPin {
			connection_144
		}
		sequenceCall {
			inPin
		}
	}
}